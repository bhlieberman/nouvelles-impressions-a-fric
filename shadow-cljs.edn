;; shadow-cljs configuration
{:dev-http {8080 ["public" "classpath:public"]
            8081 ["dev-resources" "classpath:public"]}

 :deps {:aliases [:cljs-dev]}
 
 :builds
 {:app {:target :browser 
        :modules {:core {:init-fn nia.app/init
                         :entries [nia.events.core nia.routing]}} 
        :devtools
        {:preloads [day8.re-frame-10x.preload.react-18]}
        :compiler-options {:warnings {:fn-deprecated false}}
        :dev
        {:output-dir "public/js/app"
         :asset-path "/js/app" 
         :closure-defines
         {re-frame.trace.trace-enabled?        true
          day8.re-frame.tracing.trace-enabled? true
          re-com.config/root-url-for-compiler-output true}}
        :release
        {:compiler-options {:optimizations :advanced}
         :output-dir "build/js/app"
         :build-options
         {:ns-aliases
          {day8.re-frame.tracing day8.re-frame.tracing-stubs}}}
        :closure-defines {nia.config.storage/sas-url #shadow/env "AZURE_BLOB_NIA_URL"
                          nia.config.storage/sas-token #shadow/env "AZURE_BLOB_SAS_TOKEN"}} 
  :portfolio {:target :browser
              :output-dir "dev-resources/js"
              :asset-path "/js"
              :compiler-options {:warnings {:fn-deprecated false}}
              :modules {:main {:init-fn nia.portfolio/init}}}
  :node-ssr {:target :node-script
             :output-dir "public/js/node"
             :output-to "public/js/node/ssr.js"
             :entries [nia.events.core nia.routing]
             :release {:compiler-options {:optimizations :advanced}
                       :output-to "build/js/server.js"}
             :main nia.node-ssr/main
             :devtools {:before-load-async nia.node-ssr/stop
                        :after-load nia.node-ssr/start}}}}
