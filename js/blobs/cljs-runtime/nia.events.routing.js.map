{"version":3,"sources":["nia/events/routing.cljs"],"mappings":";;;;;;;;AAOA,yDAAA,zDAACA,qIAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;gBAAT,AAAAF,4CAAAD,WAAA,IAAA,vEAAWI;AAAX,AACE,IAAMC,YAAU,AAAA,2HAA4BH;IACtCI,cAAY,AAACC,8CAAsB,AAAA,kGAAcF,WAAWD;AADlE,AAEE,wDAAA,jDAACI,8CAAMN,gGAA8B,wDAAA,xDAACM,8CAAMJ,8EAAuBE;;AAExE,yDAAA,zDAACG,uIAEA,aAAAC,FAAKP;AAAL,AAAA,IAAAQ,aAAAD;YAAA,AAAAT,4CAAAU,WAAA,IAAA,nEAAQR;YAAR,AAAAF,4CAAAU,WAAA,IAAA,nEAAUC;aAAV,AAAAX,4CAAAU,WAAA,IAAA,pEAAgBE;AAAhB,AAAA,kDAAA,kEAAA,mFACgBD,MAAMC;;AAGvB,qBAAA,rBAACC,uFAEA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;YAAA,AAAAd,4CAAAe,WAAA,IAAA,nEAAMJ;aAAN,AAAAX,4CAAAe,WAAA,IAAA,pEAAYH;AAAZ,AACE,OAACI,8CAAMC,8BAAaN,MAAMC;;AAE7B,yDAAA,zDAACJ,2IAEA,WAAAU,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAanB;IAAbsB,aAAAJ;QAAA,AAAAnB,4CAAAuB,WAAA,IAAA,/DAAmBrB;YAAnB,AAAAF,4CAAAuB,WAAA,IAAA,nEAAqBC;YAArB,AAAAxB,4CAAAuB,WAAA,IAAA,nEAA2BE;AAA3B,AACE,IAAMC,YAAU,kDAAA,mFAAA,rIAACC,+CAAO1B,2LAAoCuB,MAAMC;IAC5DG,QAAM,AAACC,4DAAcC,mBAAOJ;AADlC,AAAA,kDAAA,kDAAA,mFAAA,mFAAA,6DAAA,mFAAA,kGAAA,mFAAA,6DAAA,mFAAA,zPAEuCE,uUACCF,UAAU,AAAA,gGAAcE;;AAEnE,yDAAA,zDAAC/B,gJAEA,cAAAkC,HAAK9B;AAAL,AAAA,IAAA+B,aAAAD;QAAA,AAAA/B,4CAAAgC,WAAA,IAAA,/DAAS9B;8BAAT,AAAAF,4CAAAgC,WAAA,IAAA,rFAAWC;AAAX,AACE,wDAAA,jDAAC1B,8CAAMN,oFAAwBgC","names":["re_frame.core.reg_event_db","p__37989","vec__37990","cljs.core.nth","db","_","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","cljs.core.assoc","re_frame.core.reg_event_fx","p__37995","vec__37996","route","params","re-frame.core/reg-fx","p__37999","vec__38000","cljs.core.apply","reitit.frontend.easy/navigate","p__38003","p__38004","map__38005","cljs.core/--destructure-map","cljs.core.get","vec__38006","canto","depth","new-route","cljs.core.get_in","match","reitit.frontend.match_by_name","nia.routing/router","p__38009","vec__38010","breadth-or-depth?"],"sourcesContent":["(ns nia.events.routing\n  (:require [nia.routing :refer [router]]\n            [re-frame.core :as rf :refer [reg-event-fx reg-event-db reg-fx]]\n            [reitit.frontend :refer [match-by-name]]\n            [reitit.frontend.easy :as rfe]\n            [reitit.frontend.controllers :as rfc]))\n\n(reg-event-db\n :routing/navigated\n (fn [db [_ new-match]]\n   (let [old-match (:app.routing/current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n     (assoc db :app.routing/current-route (assoc new-match :controllers controllers)))))\n\n(reg-event-fx\n :routing/push-state\n (fn [_ [_ route params]]\n   {:push-state [route params]\n    #_:fx #_[[:dispatch [:maps/set-current-center nil center]]]}))\n\n(reg-fx\n :push-state\n (fn [[route params]]\n   (apply rfe/navigate route params)))\n\n(reg-event-fx\n :routing/parens-click\n (fn [{:keys [db]} [_ canto depth]]\n   (let [new-route (get-in db [:app.routing.impl/parens-routes canto depth])\n         match (match-by-name router new-route)]\n     {:fx [[:dispatch [:routing/navigated match]]\n           [:dispatch [:routing/push-state new-route (:path-params match)]]]})))\n\n(reg-event-db\n :routing/traversal-type\n (fn [db [_ breadth-or-depth?]]\n   (assoc db :poem/traversal-type breadth-or-depth?)))"]}