{
"version":3,
"file":"module$node_modules$$radix_ui$react_slot$dist$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@radix-ui/react-slot/dist/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$radix_ui$react_slot$dist$index\"] = function(global,require,module,exports) {\nvar $dAvBt$babelruntimehelpersextends = require(\"@babel/runtime/helpers/extends\");\nvar $dAvBt$react = require(\"react\");\nvar $dAvBt$radixuireactcomposerefs = require(\"@radix-ui/react-compose-refs\");\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n$parcel$export(module.exports, \"Slot\", () => $82dc8d030dec7549$export$8c6ed5c666ac1360);\n$parcel$export(module.exports, \"Slottable\", () => $82dc8d030dec7549$export$d9f1ccf0bdb05d45);\n$parcel$export(module.exports, \"Root\", () => $82dc8d030dec7549$export$be92b6f5f03c0fe9);\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/ const $82dc8d030dec7549$export$8c6ed5c666ac1360 = /*#__PURE__*/ $dAvBt$react.forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    const childrenArray = $dAvBt$react.Children.toArray(children);\n    const slottable = childrenArray.find($82dc8d030dec7549$var$isSlottable);\n    if (slottable) {\n        // the new element to render is the one passed as a child of `Slottable`\n        const newElement = slottable.props.children;\n        const newChildren = childrenArray.map((child)=>{\n            if (child === slottable) {\n                // because the new element will be the one rendered, we are only interested\n                // in grabbing its children (`newElement.props.children`)\n                if ($dAvBt$react.Children.count(newElement) > 1) return $dAvBt$react.Children.only(null);\n                return /*#__PURE__*/ $dAvBt$react.isValidElement(newElement) ? newElement.props.children : null;\n            } else return child;\n        });\n        return /*#__PURE__*/ $dAvBt$react.createElement($82dc8d030dec7549$var$SlotClone, ($parcel$interopDefault($dAvBt$babelruntimehelpersextends))({}, slotProps, {\n            ref: forwardedRef\n        }), /*#__PURE__*/ $dAvBt$react.isValidElement(newElement) ? /*#__PURE__*/ $dAvBt$react.cloneElement(newElement, undefined, newChildren) : null);\n    }\n    return /*#__PURE__*/ $dAvBt$react.createElement($82dc8d030dec7549$var$SlotClone, ($parcel$interopDefault($dAvBt$babelruntimehelpersextends))({}, slotProps, {\n        ref: forwardedRef\n    }), children);\n});\n$82dc8d030dec7549$export$8c6ed5c666ac1360.displayName = 'Slot';\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/ const $82dc8d030dec7549$var$SlotClone = /*#__PURE__*/ $dAvBt$react.forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    if (/*#__PURE__*/ $dAvBt$react.isValidElement(children)) return /*#__PURE__*/ $dAvBt$react.cloneElement(children, {\n        ...$82dc8d030dec7549$var$mergeProps(slotProps, children.props),\n        ref: forwardedRef ? $dAvBt$radixuireactcomposerefs.composeRefs(forwardedRef, children.ref) : children.ref\n    });\n    return $dAvBt$react.Children.count(children) > 1 ? $dAvBt$react.Children.only(null) : null;\n});\n$82dc8d030dec7549$var$SlotClone.displayName = 'SlotClone';\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/ const $82dc8d030dec7549$export$d9f1ccf0bdb05d45 = ({ children: children  })=>{\n    return /*#__PURE__*/ $dAvBt$react.createElement($dAvBt$react.Fragment, null, children);\n};\n/* ---------------------------------------------------------------------------------------------- */ function $82dc8d030dec7549$var$isSlottable(child) {\n    return /*#__PURE__*/ $dAvBt$react.isValidElement(child) && child.type === $82dc8d030dec7549$export$d9f1ccf0bdb05d45;\n}\nfunction $82dc8d030dec7549$var$mergeProps(slotProps, childProps) {\n    // all child props should override\n    const overrideProps = {\n        ...childProps\n    };\n    for(const propName in childProps){\n        const slotPropValue = slotProps[propName];\n        const childPropValue = childProps[propName];\n        const isHandler = /^on[A-Z]/.test(propName);\n        if (isHandler) {\n            // if the handler exists on both, we compose them\n            if (slotPropValue && childPropValue) overrideProps[propName] = (...args)=>{\n                childPropValue(...args);\n                slotPropValue(...args);\n            };\n            else if (slotPropValue) overrideProps[propName] = slotPropValue;\n        } else if (propName === 'style') overrideProps[propName] = {\n            ...slotPropValue,\n            ...childPropValue\n        };\n        else if (propName === 'className') overrideProps[propName] = [\n            slotPropValue,\n            childPropValue\n        ].filter(Boolean).join(' ');\n    }\n    return {\n        ...slotProps,\n        ...overrideProps\n    };\n}\nconst $82dc8d030dec7549$export$be92b6f5f03c0fe9 = $82dc8d030dec7549$export$8c6ed5c666ac1360;\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$82dc8d030dec7549$var$isSlottable","child","$dAvBt$react","isValidElement","type","$82dc8d030dec7549$export$d9f1ccf0bdb05d45","$82dc8d030dec7549$var$mergeProps","slotProps","childProps","overrideProps","propName","slotPropValue","childPropValue","test","isHandler","args","filter","Boolean","join","$dAvBt$babelruntimehelpersextends","$dAvBt$radixuireactcomposerefs","$82dc8d030dec7549$export$8c6ed5c666ac1360","$82dc8d030dec7549$export$be92b6f5f03c0fe9","forwardRef","props","forwardedRef","children","childrenArray","Children","toArray","slottable","find","newElement","newChildren","map","count","only","createElement","$82dc8d030dec7549$var$SlotClone","__esModule","default","ref","cloneElement","undefined","displayName","composeRefs","Fragment"]
}
