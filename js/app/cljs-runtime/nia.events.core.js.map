{"version":3,"sources":["nia/events/core.cljs"],"mappings":";;;;;;;;;AAQA,yDAAA,qEAAA,9HAACA,iNAEC,wDAAA,xDAACC,yIACF,WAAAC,SAA6BK;AAA7B,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;oBAAA,AAAAE,4CAAAF,eAAA,3EAAaG;AAAb,AACE,IAAAE,aAAyCF;IAAzCE,iBAAA,AAAAJ,4BAAAI;mBAAA,AAAAH,4CAAAG,eAAA,1EAAcC;kBAAd,AAAAJ,4CAAAG,eAAA,zEAA2BE;AAA3B,AAAA,kDAAA,yEAAA,kDAAA,mFAAA,mFAAA,6DAAA,mFAAA,jYACOC;;AAOV,yDAAA,zDAACC,0JAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASP;YAAT,AAAAQ,4CAAAD,WAAA,IAAA,nEAAWG;eAAX,AAAAF,4CAAAD,WAAA,IAAA,tEAAiBI;AAAjB,AACE,wDAAA,jDAACC,8CAAMH,+EAAqB,AAAQ,kDAAA,mFAAA,rIAACI,+CAAOJ,gKAAsBC,MAAMC;;AAE3E,yDAAA,zDAAClB,0IAEA,WAAAqB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAnB,4BAAAmB;SAAA,AAAAlB,4CAAAkB,eAAA,hEAAaP;IAAbQ,aAAAF;QAAA,AAAAP,4CAAAS,WAAA,IAAA,/DAAmBjB;YAAnB,AAAAQ,4CAAAS,WAAA,IAAA,nEAAqBC;aAArB,AAAAV,4CAAAS,WAAA,IAAA,pEAA2BE;gBAA3B,AAAAX,4CAAAS,WAAA,IAAA,vEAAkCG;AAAlC,AACE,oBAAIA;AAAJ,kDAAA,yLAAA,kEAAA,3MACO,iDAAA,jDAACR,8CAAMH,gFAAsBW,gKACpBF,MAAMC;;AAFtB,kDAAA,kEAAA,mFAGgBD,MAAMC;;;AAEzB,yDAAA,zDAACd,gIAEA,WAAKI,GAAGT;AAAR,AACE,yDAAA,lDAACqB,+CAAOZ,+EAAoBa;;AAE/B,oCAAA,pCAAMC;AAAN,AACE,mCAAA,mFAAA,/GAACC;;AAEH,GAAA,QAAAC,gCAAAC,uCAAAC,4CAAAC;AAAA;AAAA,AAAA,AAASC,6BAAM,AAACC,oBAASP;;AAEzB,CAACM,2DAAAA,6DAAAA","names":["re_frame.core.reg_event_fx","re_frame.core.inject_cofx","p__28673","map__28674","cljs.core/--destructure-map","cljs.core.get","local-storage","_","map__28675","user-history","history-loc","nia.config.app-db/app-db","re_frame.core.reg_event_db","p__28676","vec__28677","cljs.core.nth","db","canto","footnote","cljs.core.assoc","cljs.core.get_in","p__28680","p__28681","map__28682","vec__28683","route","params","new-depth","cljs.core.update","cljs.core/not","nia.events.core/init-module!","re-frame.core/dispatch-sync","js/nia","js/nia.events","js/nia.events.core","js/nia.events.core.init!","nia.events.core/init!","goog.functions/once"],"sourcesContent":["(ns nia.events.core\n  (:require [goog.functions :as gfn]\n            [nia.config.app-db :refer [app-db]]\n            [nia.events.routing]\n            [nia.events.search]\n            [re-frame.core :as rf :refer [dispatch-sync inject-cofx reg-event-db reg-event-fx]]\n            [day8.re-frame.http-fx]))\n\n(reg-event-fx\n :app/initialize\n [(inject-cofx :local-storage)]\n (fn [{:keys [local-storage]} _]\n   (let [{:keys [user-history history-loc]} local-storage]\n     {:db app-db\n      :fx [#_[:dispatch [:routing/push-state user-history history-loc]]\n           #_(into []\n                   (for [url (keys (get app-db :images))]\n                     [:dispatch [:azure/get-blob url]]))\n           [:dispatch [:search/create-builder]]]})))\n\n(reg-event-db\n :poem/change-current-footnote \n (fn [db [_ canto footnote]]\n   (assoc db :current-footnote (.-body (get-in db [:cantos/footnotes canto footnote])))))\n\n(reg-event-fx\n :poem/parens-routing \n (fn [{:keys [db]} [_ route params new-depth]]\n   (if new-depth\n     {:db (assoc db :poem/parens-depth new-depth)\n      :push-state [route params]}\n     {:push-state [route params]})))\n\n(reg-event-db\n :collapse/toggle\n (fn [db _]\n   (update db :show-collapsed? not)))\n\n(defn init-module! []\n  (dispatch-sync [:app/initialize]))\n\n(defonce init! (gfn/once init-module!))\n\n(init!)"]}