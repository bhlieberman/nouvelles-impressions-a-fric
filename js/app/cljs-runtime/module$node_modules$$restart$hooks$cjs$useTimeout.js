import "./cljs_env.js";
import "./shadow.js.js";
import "./module$node_modules$react$index.js";
import "./module$node_modules$$restart$hooks$cjs$useMounted.js";
import "./module$node_modules$$restart$hooks$cjs$useWillUnmount.js";
shadow$provide.module$node_modules$$restart$hooks$cjs$useTimeout=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function setChainedTimeout(handleRef,fn,timeoutAtMs){const delayMs=timeoutAtMs-Date.now();handleRef.current=delayMs<=MAX_DELAY_MS?setTimeout(fn,delayMs):setTimeout(()=>setChainedTimeout(handleRef,fn,timeoutAtMs),MAX_DELAY_MS)}exports.__esModule=!0;exports.default=function(){const isMounted=(0,_useMounted.default)(),
handleRef=(0,_react.useRef)();(0,_useWillUnmount.default)(()=>clearTimeout(handleRef.current));return(0,_react.useMemo)(()=>({set:function(fn,delayMs=0){isMounted()&&(clearTimeout(handleRef.current),delayMs<=MAX_DELAY_MS?handleRef.current=setTimeout(fn,delayMs):setChainedTimeout(handleRef,fn,Date.now()+delayMs))},clear:()=>clearTimeout(handleRef.current)}),[])};var _react=require("module$node_modules$react$index"),_useMounted=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$useMounted")),
_useWillUnmount=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$useWillUnmount"));const MAX_DELAY_MS=2**31-1}
//# sourceMappingURL=module$node_modules$$restart$hooks$cjs$useTimeout.js.map
