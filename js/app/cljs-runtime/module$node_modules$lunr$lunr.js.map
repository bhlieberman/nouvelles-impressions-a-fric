{
"version":3,
"file":"module$node_modules$lunr$lunr.js",
"lineCount":74,
"mappings":"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",
"sources":["node_modules/lunr/lunr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lunr$lunr\"] = function(global,require,module,exports) {\n/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n\n};"],
"names":["shadow$provide","global","require","module","exports","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","call","build","version","utils","warn","message","console","asString","lunr.utils.asString","obj","toString","clone","lunr.utils.clone","undefined","Object","create","keys","i","length","key","val","Array","isArray","slice","TypeError","FieldRef","lunr.FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","lunr.FieldRef.fromString","s","n","indexOf","fieldRef","prototype","lunr.FieldRef.prototype.toString","Set","lunr.Set","elements","complete","intersect","other","union","contains","empty","lunr.Set.prototype.contains","object","lunr.Set.prototype.intersect","intersection","a","b","element","push","lunr.Set.prototype.union","concat","idf","lunr.idf","posting","documentCount","documentsWithTerm","Math","log","abs","Token","lunr.Token","str","metadata","lunr.Token.prototype.toString","update","lunr.Token.prototype.update","fn","lunr.Token.prototype.clone","tokenizer","lunr.tokenizer","map","t","toLowerCase","len","tokens","sliceEnd","sliceStart","char","charAt","sliceLength","match","separator","tokenMetadata","Pipeline","lunr.Pipeline","_stack","registeredFunctions","registerFunction","lunr.Pipeline.registerFunction","label","warnIfFunctionNotRegistered","lunr.Pipeline.warnIfFunctionNotRegistered","load","lunr.Pipeline.load","serialised","forEach","fnName","Error","lunr.Pipeline.prototype.add","fns","arguments","after","lunr.Pipeline.prototype.after","existingFn","newFn","pos","splice","before","lunr.Pipeline.prototype.before","remove","lunr.Pipeline.prototype.remove","run","lunr.Pipeline.prototype.run","stackLength","memo","j","result","k","runString","lunr.Pipeline.prototype.runString","token","reset","lunr.Pipeline.prototype.reset","toJSON","lunr.Pipeline.prototype.toJSON","Vector","lunr.Vector","_magnitude","positionForIndex","lunr.Vector.prototype.positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","lunr.Vector.prototype.insert","insertIdx","upsert","lunr.Vector.prototype.upsert","position","magnitude","lunr.Vector.prototype.magnitude","sumOfSquares","elementsLength","sqrt","dot","lunr.Vector.prototype.dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","lunr.Vector.prototype.similarity","toArray","lunr.Vector.prototype.toArray","output","lunr.Vector.prototype.toJSON","step2list","step3list","re_mgr0","RegExp","mgr0","re_mgr1","mgr1","re_meq1","meq1","re_s_v","s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","w","firstch","substr","toUpperCase","re","re2","test","replace","fp","exec","stem","re3","suffix","generateStopWordFilter","lunr.generateStopWordFilter","stopWords","words","reduce","stopWord","lunr.trimmer","TokenSet","lunr.TokenSet","final","edges","id","_nextId","fromArray","lunr.TokenSet.fromArray","arr","finish","root","fromClause","lunr.TokenSet.fromClause","clause","fromFuzzyString","term","editDistance","lunr.TokenSet.fromFuzzyString","stack","node","editsRemaining","frame","pop","noEditNode","insertionNode","substitutionNode","charA","charB","transposeNode","lunr.TokenSet.fromString","next","lunr.TokenSet.prototype.toArray","prefix","edge","lunr.TokenSet.prototype.toString","_str","labels","sort","lunr.TokenSet.prototype.intersect","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","lunr.TokenSet.Builder","previousWord","uncheckedNodes","minimizedNodes","lunr.TokenSet.Builder.prototype.insert","word","commonPrefix","minimize","child","nextNode","parent","lunr.TokenSet.Builder.prototype.finish","lunr.TokenSet.Builder.prototype.minimize","downTo","childKey","Index","lunr.Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","lunr.Index.prototype.search","queryString","query","parse","parser","QueryParser","lunr.Index.prototype.query","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","matchingDocumentRef","matchingFieldRef","fieldMatch","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","score","fieldVector","docMatch","matchData","combine","ref","lunr.Index.prototype.toJSON","lunr.Index.load","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","lunr.Builder","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","lunr.Builder.prototype.ref","lunr.Builder.prototype.field","attributes","RangeError","lunr.Builder.prototype.b","number","k1","lunr.Builder.prototype.k1","lunr.Builder.prototype.add","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","lunr.Builder.prototype.calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","lunr.Builder.prototype.createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","tf","round","createTokenSet","lunr.Builder.prototype.createTokenSet","lunr.Builder.prototype.build","use","lunr.Builder.prototype.use","args","unshift","apply","lunr.MatchData","clonedMetadata","metadataKeys","lunr.MatchData.prototype.combine","otherMatchData","lunr.MatchData.prototype.add","lunr.Query","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","lunr.Query.prototype.clause","lunr.Query.prototype.isNegated","lunr.Query.prototype.term","options","QueryParseError","lunr.QueryParseError","name","QueryLexer","lunr.QueryLexer","lexemes","escapeCharPositions","lunr.QueryLexer.prototype.run","state","lexText","sliceString","lunr.QueryLexer.prototype.sliceString","subSlices","join","emit","lunr.QueryLexer.prototype.emit","type","escapeCharacter","lunr.QueryLexer.prototype.escapeCharacter","lunr.QueryLexer.prototype.next","EOS","width","lunr.QueryLexer.prototype.width","ignore","lunr.QueryLexer.prototype.ignore","backup","lunr.QueryLexer.prototype.backup","acceptDigitRun","lunr.QueryLexer.prototype.acceptDigitRun","charCode","charCodeAt","more","lunr.QueryLexer.prototype.more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lunr.QueryLexer.lexField","lexer","lexTerm","lunr.QueryLexer.lexTerm","lexEditDistance","lunr.QueryLexer.lexEditDistance","lexBoost","lunr.QueryLexer.lexBoost","lexEOS","lunr.QueryLexer.lexEOS","termSeparator","lunr.QueryLexer.lexText","lunr.QueryParser","currentClause","lexemeIdx","lunr.QueryParser.prototype.parse","parseClause","peekLexeme","lunr.QueryParser.prototype.peekLexeme","consumeLexeme","lunr.QueryParser.prototype.consumeLexeme","lexeme","nextClause","lunr.QueryParser.prototype.nextClause","lunr.QueryParser.parseClause","parsePresence","parseField","parseTerm","errorMessage","lunr.QueryParser.parsePresence","nextLexeme","lunr.QueryParser.parseField","possibleFields","f","lunr.QueryParser.parseTerm","parseEditDistance","parseBoost","lunr.QueryParser.parseEditDistance","parseInt","isNaN","lunr.QueryParser.parseBoost","factory","define","amd"]
}
