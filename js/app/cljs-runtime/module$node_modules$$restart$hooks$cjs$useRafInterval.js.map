{
"version":3,
"file":"module$node_modules$$restart$hooks$cjs$useRafInterval.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIC,OAASL,OAAA,CAAQ,iCAAR,CAAb,CACIM,iBACJC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIL,CAAAA,UAAX,CAAwBK,GAAxB,CAA8B,CAAEJ,QAASI,GAAX,CAAvC,CADd,CAAuBR,OAAA,CAAQ,wDAAR,CAAvB,CA0BvBE,QAAQE,CAAAA,OAAR,CAxBAK,QAAuB,CAACC,EAAD,CAAKC,EAAL,CAASC,MAAA,CAAS,CAAA,CAAlB,CAAyB,CAO9CC,QAASA,KAAI,EAAG,CAEd,MAAMC,MADqBC,CAAX,IAAIC,IAAOD,EAAAA,OAAXE,EACVH,CAAkBI,KACpBC,UAAUF,CAAAA,OAAd,GACIH,KAKJ,EALaH,EAKb,EALmBS,KAAMH,CAAAA,OAKzB,GAJEG,KAAMH,CAAAA,OAAN,EACA;AAAAC,KAAA,CAAmBH,CAAX,IAAIC,IAAOD,EAAAA,OAAX,EAGV,EADAM,oBAAA,CAAqBC,MAArB,CACA,CAAAA,MAAA,CAASC,qBAAA,CAAsBV,IAAtB,CANT,CAHc,CANhB,IAAIS,MAAJ,CACIJ,MAAmBH,CAAX,IAAIC,IAAOD,EAAAA,OAAX,EACZ,OAAMK,MAAQ,GAAId,gBAAiBF,CAAAA,OAArB,EAA8BM,EAA9B,CAAd,CAGMS,UAAY,GAAIb,gBAAiBF,CAAAA,OAArB,EAA8BQ,MAA9B,CAYlB,IAAIP,MAAOmB,CAAAA,SAAX,EAAsB,EAAA,EAAM,CAC1BF,MAAA,CAASC,qBAAA,CAAsBV,IAAtB,CACT,OAAO,EAAA,EAAMQ,oBAAA,CAAqBC,MAArB,CAFa,CAA5B,CAGG,EAHH,CAlB8C,CARkE;",
"sources":["node_modules/@restart/hooks/cjs/useRafInterval.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$restart$hooks$cjs$useRafInterval\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _react = require(\"react\");\nvar _useCommittedRef = _interopRequireDefault(require(\"./useCommittedRef\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction useRafInterval(fn, ms, paused = false) {\n  let handle;\n  let start = new Date().getTime();\n  const fnRef = (0, _useCommittedRef.default)(fn);\n  // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n  const pausedRef = (0, _useCommittedRef.default)(paused);\n  function loop() {\n    const current = new Date().getTime();\n    const delta = current - start;\n    if (pausedRef.current) return;\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n  (0, _react.useEffect)(() => {\n    handle = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(handle);\n  }, []);\n}\nvar _default = useRafInterval;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","default","_react","_useCommittedRef","_interopRequireDefault","obj","useRafInterval","fn","ms","paused","loop","delta","getTime","Date","current","start","pausedRef","fnRef","cancelAnimationFrame","handle","requestAnimationFrame","useEffect"]
}
