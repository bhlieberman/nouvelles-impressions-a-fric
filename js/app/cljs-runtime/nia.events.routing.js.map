{"version":3,"sources":["nia/events/routing.cljs"],"mappings":";;;;;;;AASA,wCAAA,mEAAA,2CAAA,kDAAA,wEAAA,qDAAA,rUAACA;AAGD,wCAAA,mEAAA,3GAACA;AAED,yDAAA,4EAAA,rIAACC,wNAEC,wDAAA,xDAACC,yIACF,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaM;qBAAb,AAAAJ,4CAAAF,eAAA,5EAAgBO;IAAhBJ,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAAkCK;IAAlCH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;IAAAE,iBAAA,AAAAJ,4BAAAI;gBAAAA,ZAAmEM;YAAnE,AAAAT,4CAAAG,eAAA,nEAA4CI;kBAA5C,AAAAP,4CAAAG,eAAA,zEAAkDK;AAAlD,AACE,IAAME,YAAU,AAAA,2HAA4BN;IACtCO,cAAY,AAACC,8CAAsB,AAAA,kGAAcF,WAAWD;IAC5DI,0BAAwB,wDAAA,xDAACC,8CAAML,8EAAuBE;AAF5D,AAAA,kDAAA,gDAGO,wDAAA,uKAAA,/NAACG,qDAAMV,gGAC2BS,4JACLL;;AAKvC,yDAAA,zDAACd,uIAEA,aAAAqB,FAAKT;AAAL,AAAA,IAAAU,aAAAD;YAAA,AAAAb,4CAAAc,WAAA,IAAA,nEAAQV;YAAR,AAAAJ,4CAAAc,WAAA,IAAA,nEAAUC;aAAV,AAAAf,4CAAAc,WAAA,IAAA,pEAAgBE;AAAhB,AACE,oBAAIA;AACF,IAAMC,MAAI,4CAAA,2CAAA,yDAAA,IAAA,kDAAA,IAAA,kDAAA,IAAA,wDAAA,IAAA,qDAAA,IAAA,qDAAA,1aAACnB,sbAEsB,AAAA,2FAAWkB;AAF5C,AAAA,kDAAA,kDAAA,mFAAA,mFAAA,6DAAA,mFAAA,iFAGyCD,MAAMC,OAAOC;;AAJxD,kDAAA,kDAAA,mFAAA,mFAAA,6DAAA,mFAAA,iFAKyCF,MAAMC;;;AAElD,qBAAA,rBAACE,uFAEA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;YAAA,AAAAnB,4CAAAoB,WAAA,IAAA,nEAAML;aAAN,AAAAf,4CAAAoB,WAAA,IAAA,pEAAYJ;AAAZ,AACE,oBAAIA;AACF,OAACK,8DAAeN,MAAMC;;AACtB,OAACK,8DAAeN;;;AAGrB,yDAAA,zDAACO,gJAEA,cAAAC,HAAKrB;AAAL,AAAA,IAAAsB,aAAAD;QAAA,AAAAvB,4CAAAwB,WAAA,IAAA,/DAASpB;8BAAT,AAAAJ,4CAAAwB,WAAA,IAAA,rFAAWC;AAAX,AACE,wDAAA,jDAACb,8CAAMV,oFAAwBuB","names":["akiroz.re-frame.storage/reg-co-fx!","re_frame.core.reg_event_fx","re_frame.core.inject_cofx","p__32448","p__32449","map__32453","cljs.core/--destructure-map","cljs.core.get","vec__32454","cljs.core.nth","map__32457","db","_local-storage","_","_data","path-params","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","new-match-w-controllers","cljs.core.assoc","p__32460","vec__32461","route","params","loc","re-frame.core/reg-fx","p__32468","vec__32469","reitit.frontend.easy.push_state","re_frame.core.reg_event_db","p__32478","vec__32479","breadth-or-depth?"],"sourcesContent":["(ns nia.events.routing\n  (:require [akiroz.re-frame.storage :refer [reg-co-fx!]]\n            [re-frame.core :as rf :refer [debug inject-cofx path\n                                          reg-event-fx reg-event-db reg-fx\n                                          trim-v]]\n            [reitit.frontend.easy :as rfe]\n            [reitit.frontend.controllers :as rfc]))\n\n;; not at all clear to me why this works??\n(reg-co-fx! :user-history {:fx :local-storage\n                           :cofx :local-storage})\n\n(reg-co-fx! :history-loc {})\n\n(reg-event-fx\n :routing/navigated\n [(inject-cofx :local-storage)]\n (fn [{:keys [db _local-storage]} [_ {:keys [_data path-params] :as new-match}]]\n   (let [old-match (:app.routing/current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)\n         new-match-w-controllers (assoc new-match :controllers controllers)]\n     {:db (assoc db\n                 :app.routing/current-route new-match-w-controllers\n                 :app.routing/location path-params)\n      #_#_:local-storage (assoc local-storage\n                                :user-history (:name data)\n                                :history-loc path-params)})))\n\n(reg-event-fx\n :routing/push-state\n (fn [_ [_ route params]]\n   (if params\n     (let [loc (get {:thesis 0 :one 1\n                     :two 2 :three 3\n                     :four 4 :five 5} (:location params))]\n       {:fx [[:dispatch [:poem/parens-routing route params loc]]]})\n     {:fx [[:dispatch [:poem/parens-routing route params]]]})))\n\n(reg-fx\n :push-state\n (fn [[route params]]\n   (if params\n     (rfe/push-state route params)\n     (rfe/push-state route))))\n\n#_{:clj-kondo/ignore [:clojure-lsp/unused-public-var]}\n(reg-event-db\n :routing/traversal-type\n (fn [db [_ breadth-or-depth?]]\n   (assoc db :poem/traversal-type breadth-or-depth?)))"]}