{"version":3,"sources":["nia/events/search.cljs"],"mappings":"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","names":["re_frame.core.reg_event_fx","p__28829","map__28830","cljs.core/--destructure-map","cljs.core.get","db","_","builder","G__28831","js/module$node_modules$lunr$lunr.Builder","cljs.core.assoc","p__28832","map__28833","all-footnotes","p__28834","p__28835","map__28836","vec__28837","cljs.core.nth","nia.events.search/add-all-docs","docs","footnotes","cljs.core.into","cljs.core.mapcat","cljs.core/vals","cljs.core.juxt","cljs.core.update","b","seq__28840","cljs.core/seq","chunk__28841","count__28842","i__28843","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","footnote","js/goog.DEBUG","js/console.log","re_frame.core.reg_event_db","cljs.core.dissoc","p__28844","p__28845","map__28846","vec__28847","map__28850","values","path","fork.re-frame/set-submitting","p__28851","p__28852","map__28853","vec__28854","p__28857","p__28858","map__28859","vec__28860","term","re-frame.core/reg-fx","p__28865","vec__28866","idx","match","ref-and-pos","p1__28863#","p1__28864#","nia.events.search.goog$module$goog$object.getValueByKeys","clojure.string/lower-case","refs","cljs.core.map","re-frame.core/dispatch","nia.events.search/ref->keyword","ref","cljs.core.apply","cljs.core/keyword","clojure.string.split","cljs.core/rest","p__28869","vec__28870","nia.events.search/get-lunr-matches","texts","cljs.core/concat","iter__5523__auto__","s__28874","cljs.core/LazySeq","c__5521__auto__","size__5522__auto__","b__28876","cljs.core/chunk-buffer","i__28875","cljs.core/-nth","vec__28877","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__28873","vec__28886","cljs.core/cons","pos","len","cljs.core/second","text","s__28881","b__28883","i__28882","iter__28880","s__28890","b__28892","i__28891","iter__28889","i","obj","cljs.core.get_in","G__28884","G__28885","G__28893","G__28894","re-frame.core/trim-v","re-frame.core/debug","nia.config.app-db/check-db","p__28895","vec__28896","vec__28899","vec__28902","matching-footnote","cljs.core/parse-long","G__28905","cljs.core.subs","cljs.core/not"],"sourcesContent":["(ns nia.events.search\n  (:require\n   [clojure.string :as str]\n   [fork.re-frame :as fork]\n   [goog.object :as gobj]\n   [\"lunr\" :as lunr]\n   [nia.config.app-db :refer [check-db]]\n   [re-frame.core :refer [debug dispatch reg-event-db reg-event-fx reg-fx trim-v]]))\n\n(reg-event-fx\n :search/create-builder\n (fn [{:keys [db]} _]\n   (let [builder (doto (lunr/Builder.)\n                   (.field \"title\")\n                   (.field \"body\")\n                   (.ref \"id\"))]\n     (set! (.-metadataWhitelist builder) #js [\"position\"])\n     {:db (assoc db :lunr/builder builder)\n      :fx [[:dispatch [:search/fetch-documents]]]})))\n\n(reg-event-fx\n :search/fetch-documents\n (fn [{:keys [db]} _]\n   (let [all-footnotes (:cantos/footnotes db)]\n     {:fx [[:dispatch [:search/add-documents all-footnotes]]]\n      :db db})))\n\n(defn add-all-docs [{:keys [db]} [_ docs]]\n  (let [footnotes (into [] (mapcat vals)\n                        ((juxt :c1 :c2 :c4) docs))]\n    {:db (update db :lunr/builder\n                 (fn [b]\n                   (doseq [footnote footnotes]\n                     (when goog.DEBUG (js/console.log (.-id footnote)))\n                     (.add b footnote))\n                   b))\n     :fx [[:dispatch [:search/build-index]]]}))\n\n(reg-event-fx\n :search/add-documents\n add-all-docs)\n\n(reg-event-db\n :search/build-index\n (fn [db _]\n   (let [builder (:lunr/builder db)]\n     (-> db\n         (assoc :lunr/index (.build builder))\n         (dissoc :lunr/builder)))))\n\n(reg-event-fx\n :search/submit-input\n (fn [{:keys [db]} [_ {:keys [values path]}]]\n   {:db (fork/set-submitting db path true)\n    :fx [[:dispatch [:search/resolved-form path values]]]}))\n\n(reg-event-fx\n :search/resolved-form\n (fn [{:keys [db]} [_ path values]]\n   (js/console.log values)\n   {:db (fork/set-submitting db path false)\n    :fx [[:dispatch [:search/search-index (get values nil)]]]}))\n\n(reg-event-fx\n :search/search-index\n (fn [{:keys [db]} [_ term]]\n   {:search-index [(:lunr/index db) term]}))\n\n(reg-fx\n :search-index\n (fn [[idx term]]\n   (let [match (.search idx term)\n         ref-and-pos (juxt #(.. % -ref)\n                           #(gobj/getValueByKeys %\n                                                 \"matchData\"\n                                                 \"metadata\"\n                                                 (str/lower-case term)\n                                                 \"body\"\n                                                 \"position\"\n                                                 0))]\n     (when (seq match)\n       (let [refs (map ref-and-pos match)]\n         (dispatch [:search/all-matches refs])\n         #_(dispatch [:search/current-best-match (first refs)]))))))\n\n(defn ref->keyword [ref]\n  (apply keyword (-> ref\n                     first\n                     (str/split #\"-\")\n                     rest)))\n\n(defn get-lunr-matches [db [refs]]\n  (let [texts (apply concat\n                     (for [ref refs\n                           :let [[pos len] (second ref)\n                                 text (ref->keyword ref)]]\n                       (for [i [:c1 :c2 :c4]\n                             :let [obj (get-in db [:cantos/footnotes i text])]\n                             :when (some? obj)]\n                         (cond-> {:text (.-body obj)}\n                           (some? pos) (assoc :pos pos)\n                           (some? len) (assoc :len len)))))]\n    (assoc db :lunr/all-matches texts)))\n\n(reg-event-db\n :search/all-matches\n [trim-v debug check-db]\n get-lunr-matches)\n\n#_{:clj-kondo/ignore [:clojure-lsp/unused-public-var]}\n(reg-event-db\n :search/current-best-match\n (fn [db [_ [ref [pos _]]]]\n   ;; TODO: update this logic to reflect rest of footnotes\n   ;; see above code for use as model\n   (let [matching-footnote (get-in db [:cantos/footnotes 4 (dec (parse-long ref))])]\n     (assoc db :lunr/current-match (some-> matching-footnote (subs pos))))))\n\n(reg-event-db\n :search/clear-results\n (fn [db _]\n   (dissoc db :lunr/current-match)))\n\n(reg-event-db\n :search/show-results\n (fn [db _]\n   (update db :search/results-showing? not)))\n\n(comment\n  (dispatch [:search/all-matches])\n  (dispatch [:search/fetch-documents])\n  (dispatch [:search/create-builder])\n  (dispatch [:search/build-index])\n  (dispatch [:search/search-index \"interlude\"]))\n"]}