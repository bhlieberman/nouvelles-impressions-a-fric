import "./cljs_env.js";
import "./shadow.js.js";
import "./module$node_modules$react$index.js";
import "./module$node_modules$$restart$hooks$cjs$useIsomorphicEffect.js";
shadow$provide.module$node_modules$$restart$hooks$cjs$useResizeObserver=function(global,require,module,exports){function getResizeObserver(){return resizeObserver=resizeObserver||new window.ResizeObserver(entries=>{entries.forEach(entry=>{const handler=targetMap.get(entry.target);handler&&handler(entry.contentRect)})})}exports.__esModule=!0;exports.default=function(element){const [rect,setRect]=(0,_react.useState)(null);(0,_useIsomorphicEffect.default)(()=>{if(element)return getResizeObserver().observe(element),
setRect(element.getBoundingClientRect()),targetMap.set(element,rect=>{setRect(rect)}),()=>{targetMap.delete(element)}},[element]);return rect};var _react=require("module$node_modules$react$index"),_useIsomorphicEffect=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$$restart$hooks$cjs$useIsomorphicEffect"));const targetMap=new WeakMap;let resizeObserver}
//# sourceMappingURL=module$node_modules$$restart$hooks$cjs$useResizeObserver.js.map
