{
"version":3,
"file":"module$node_modules$$restart$hooks$cjs$useResizeObserver.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUrHC,QAASA,kBAAiB,EAAG,CAE3B,MAAOC,eAAP,CAAwBA,cAAxB,EAA0C,IAAIC,MAAOC,CAAAA,cAAX,CAA0BC,OAAA,EAAW,CAC7EA,OAAQC,CAAAA,OAAR,CAAgBC,KAAA,EAAS,CACvB,MAAMC,QAAUC,SAAUC,CAAAA,GAAV,CAAcH,KAAMI,CAAAA,MAApB,CACZH,QAAJ,EAAaA,OAAA,CAAQD,KAAMK,CAAAA,WAAd,CAFU,CAAzB,CAD6E,CAArC,CAFf,CAP7BZ,OAAQa,CAAAA,UAAR,CAAqB,CAAA,CACrBb,QAAQc,CAAAA,OAAR,CAkCAC,QAA0B,CAACC,OAAD,CAAU,CAClC,MAAM,CAACC,IAAD,CAAOC,OAAP,CAAA,CAAkB,GAAIC,MAAOC,CAAAA,QAAX,EAAqB,IAArB,CACxB,IAAIC,oBAAqBP,CAAAA,OAAzB,EAAkC,EAAA,EAAM,CACtC,GAAKE,OAAL,CAMA,MALAf,kBAAA,EAAoBqB,CAAAA,OAApB,CAA4BN,OAA5B,CAKO;AAJPE,OAAA,CAAQF,OAAQO,CAAAA,qBAAR,EAAR,CAIO,CAHPd,SAAUe,CAAAA,GAAV,CAAcR,OAAd,CAAuBC,IAAA,EAAQ,CAC7BC,OAAA,CAAQD,IAAR,CAD6B,CAA/B,CAGO,CAAA,EAAA,EAAM,CACXR,SAAUgB,CAAAA,MAAV,CAAiBT,OAAjB,CADW,CAPyB,CAAxC,CAUG,CAACA,OAAD,CAVH,CAWA,OAAOC,KAb2B,CAjCpC,KAAIE,OAASrB,OAAA,CAAQ,iCAAR,CAAb,CACIuB,qBACJK,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAId,CAAAA,UAAX,CAAwBc,GAAxB,CAA8B,CAAEb,QAASa,GAAX,CAAvC,CADV,CAAuB7B,OAAA,CAAQ,4DAAR,CAAvB,CAE3B,OAAMW,UAAY,IAAImB,OACtB,KAAI1B,cATiH;",
"sources":["node_modules/@restart/hooks/cjs/useResizeObserver.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$restart$hooks$cjs$useResizeObserver\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = useResizeObserver;\nvar _react = require(\"react\");\nvar _useIsomorphicEffect = _interopRequireDefault(require(\"./useIsomorphicEffect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nfunction useResizeObserver(element) {\n  const [rect, setRect] = (0, _react.useState)(null);\n  (0, _useIsomorphicEffect.default)(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getResizeObserver","resizeObserver","window","ResizeObserver","entries","forEach","entry","handler","targetMap","get","target","contentRect","__esModule","default","useResizeObserver","element","rect","setRect","_react","useState","_useIsomorphicEffect","observe","getBoundingClientRect","set","delete","_interopRequireDefault","obj","WeakMap"]
}
