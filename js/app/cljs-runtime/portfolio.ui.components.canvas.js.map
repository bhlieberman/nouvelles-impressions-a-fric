{"version":3,"sources":["portfolio/ui/components/canvas.cljs"],"mappings":"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","names":["portfolio.ui.components.canvas/get-iframe","canvas-el","G__32296","portfolio.ui.components.canvas/get-iframe-document","G__32297","portfolio.ui.components.canvas/get-iframe-body","G__32299","portfolio.ui.components.canvas/report-error","cause","e","scene","portfolio.ui.actions.dispatch","p__32302","map__32303","cljs.core/--destructure-map","cljs.core.get","portfolio.ui.components.canvas/render-scene","el","tools","opt","iframe","canvas","G__32307","error","seq__32360","cljs.core/seq","chunk__32361","count__32362","i__32363","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","tool","e32435","e32463","portfolio.ui.canvas.protocols/prepare-canvas","e32474","portfolio.adapter/render-component","cljs.core.assoc","fexpr__32482","js/setTimeout","seq__32487","chunk__32488","count__32489","i__32490","e32502","e32506","portfolio.ui.canvas.protocols/finalize-canvas","win","cljs.core/clj->js","cljs.core/namespace","cljs.core/name","cljs.core.remove","cljs.core/empty?","clojure.string.join","portfolio.ui.components.canvas/on-mounted","f","G__32508","_","doc","portfolio.ui.components.canvas/init-canvas","data","document","head","loaded","cljs.core.atom","try-complete","cljs.core/deref","cljs.core._EQ_","js/window.postMessage","seq__32522","chunk__32523","count__32524","i__32525","path","link","js/document.createElement","cljs.core.swap_BANG_","cljs.core/inc","vec__32536","cljs.core.nth","t","r","b","l","portfolio.ui.components.canvas/process-render-queue","portfolio.ui.components.canvas/enqueue-render-data","G__32541","G__32542","dumdom.core/component","portfolio.ui.components.canvas/Canvas","or__5045__auto__","G__32551","p__32553","map__32554","G__32552","portfolio.ui.components.canvas/Toolbar","buttons","iter__5523__auto__","s__32556","cljs.core/LazySeq","c__5521__auto__","size__5522__auto__","b__32558","cljs.core/chunk-buffer","i__32557","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__32555","cljs.core/cons","cljs.core/rest","cljs.core.comp","portfolio.ui.canvas.protocols/render-toolbar-button","s__32561","b__32563","i__32562","iter__32560","cljs.core.filter","G__32564","G__32565","portfolio.ui.components.canvas/CanvasPanel","button","portfolio.ui.components.triangle/TriangleButton","portfolio.ui.components.tab-bar/TabBar","G__32566","portfolio.ui.view/render-view","G__32568","p__32570","map__32571","G__32569","portfolio.ui.components.canvas/CanvasHeader","title","url","description","code","G__32573","portfolio.ui.components.markdown/Markdown","G__32575","portfolio.ui.components.code/Code","portfolio.ui.components.canvas/render-canvas","cljs.core/not-empty","cljs.core/select-keys","cljs.core/not","G__32576","portfolio.ui.components.error/Error","cljs.core/nil?","portfolio.ui.components.canvas/direction","G__32577","G__32578","portfolio.ui.components.canvas/WrappedMenuBar","menu-bar","G__32579","portfolio.ui.components.menu-bar/MenuBar","portfolio.ui.components.canvas/get-grid-styles","cljs.core.into","portfolio.ui.components.canvas/touch-x","G__32580","portfolio.ui.components.canvas/touch-y","G__32581","portfolio.ui.components.canvas/get-style-n","style","prop","js/parseInt","portfolio.ui.components.canvas/get-dim","props","js/window.getComputedStyle","portfolio.ui.components.canvas/set-size","size","portfolio.ui.components.canvas/set-offset","offset","portfolio.ui.components.canvas/get-neighbour","G__32588","p__32590","map__32591","G__32589","portfolio.ui.components.canvas/Handle","state","container","cljs.core/assoc","js/document.body","map__32592","dragging?","start","dim","neighbour-dim","neighbour","_e","cljs.core/dissoc","kind","portfolio.ui.components.canvas/render-hud","hud","portfolio.ui.components.hud.render_hud","G__32593","p__32595","map__32596","G__32594","portfolio.ui.components.canvas/Pane","toolbar","canvases","background","browser","handle","class-name","G__32597","G__32598","cljs.core.merge","portfolio.ui.components.browser/Browser","G__32599","cljs.core.map","G__32600","portfolio.ui.components.canvas/render-layout","G__32602","fexpr__32601","G__32603","G__32604","G__32605","portfolio.ui.components.canvas/CanvasView","G__32608","G__32609"],"sourcesContent":["(ns portfolio.ui.components.canvas\n  (:require [clojure.string :as str]\n            [dumdom.core :as d]\n            [portfolio.adapter :as adapter]\n            [portfolio.ui.actions :as actions]\n            [portfolio.ui.canvas.protocols :as canvas]\n            [portfolio.ui.components.browser :refer [Browser]]\n            [portfolio.ui.components.code :refer [Code]]\n            [portfolio.ui.components.error :refer [Error]]\n            [portfolio.ui.components.hud :as hud]\n            [portfolio.ui.components.markdown :refer [Markdown]]\n            [portfolio.ui.components.menu-bar :refer [MenuBar]]\n            [portfolio.ui.components.tab-bar :refer [TabBar]]\n            [portfolio.ui.components.triangle :refer [TriangleButton]]\n            [portfolio.ui.view :as view]))\n\n(defn get-iframe [canvas-el]\n  (some-> canvas-el (.querySelector \".canvas\")))\n\n(defn get-iframe-document [canvas-el]\n  (some-> canvas-el get-iframe .-contentWindow .-document))\n\n(defn get-iframe-body [canvas-el]\n  (some-> canvas-el get-iframe-document .-body))\n\n(defn report-error [cause e scene]\n  (actions/dispatch\n   (:report-render-error (:actions scene))\n   nil\n   {:action/exception e\n    :action/cause cause}))\n\n(defn render-scene [el {:keys [scene tools opt]}]\n  (let [iframe (get-iframe el)\n        canvas (some-> iframe .-contentDocument (.getElementById \"canvas\"))\n        error (.querySelector el \".error-container\")]\n    (when error\n      (.removeChild (.-parentNode error) error)\n      (set! (.. iframe -style -display) \"block\"))\n    (doseq [tool tools]\n      (try\n        (canvas/prepare-canvas tool el opt)\n        (catch :default e\n          (-> (str \"Failed to prepare canvas with \" (:id tool))\n              (report-error e scene)))))\n    (try\n      (adapter/render-component (assoc scene :component ((:component-fn scene))) canvas)\n      (js/setTimeout\n       (fn []\n         (doseq [tool tools]\n           (try\n             (canvas/finalize-canvas tool el opt)\n             (catch :default e\n               (-> (str \"Failed to finalize canvas with \" (:id tool))\n                   (report-error e scene)))))\n         (when-let [win (.-contentWindow iframe)]\n           (.postMessage\n            win\n            (clj->js {:event \"scene-rendered\"\n                      :scene-id (->> [(namespace (:id scene))\n                                      (name (:id scene))]\n                                     (remove empty?)\n                                     (str/join \"/\"))}) \"*\")))\n       50)\n      (catch :default e\n        (-> (str \"Failed to render \" (str \"'\" (:title scene) \"'\"))\n            (report-error e scene))))))\n\n(defn on-mounted [el f]\n  (if (some-> el .-contentDocument (.getElementById \"canvas\"))\n    (f)\n    (.addEventListener\n     el \"load\"\n     (fn [_]\n       (let [doc (->> el .-contentDocument)]\n         (set! (.. doc -documentElement -style -height) \"auto\")\n         (when-not (.getElementById doc \"canvas\")\n           (let [el (.createElement doc \"div\")]\n             (set! (.-id el) \"canvas\")\n             (.appendChild (.-body doc) el)))\n         (f))))))\n\n(defn init-canvas [el data f]\n  (let [iframe (get-iframe el)\n        document (get-iframe-document el)\n        head (.-head document)\n        loaded (atom 0)\n        try-complete #(when (= (count (:css-paths data)) @loaded)\n                        (f))]\n    (set! (.-title document) \"Component scene\")\n    (set! (-> iframe .-contentWindow .-portfolioMode) \"client\")\n    (.addEventListener\n     (.-contentWindow iframe)\n     \"message\"\n     (fn [e]\n       (js/window.postMessage (.-data e))))\n    (try-complete)\n    (doseq [path (:css-paths data)]\n      (let [link (js/document.createElement \"link\")]\n        (set! (.-rel link) \"stylesheet\")\n        (set! (.-type link) \"text/css\")\n        (set! (.-href link) path)\n        (.addEventListener\n         link \"load\"\n         (fn [_]\n           (swap! loaded inc)\n           (try-complete)))\n        (.appendChild head link)))\n    (let [[t r b l] (:viewport/padding (:opt data))]\n      (when t (set! (.. document -body -style -paddingTop) (str t \"px\")))\n      (when r (set! (.. document -body -style -paddingBottom) (str r \"px\")))\n      (when b (set! (.. document -documentElement -style -paddingLeft) (str b \"px\")))\n      (when l (set! (.. document -documentElement -style -paddingRight) (str l \"px\"))))))\n\n(defn process-render-queue [el]\n  (when (.-renderFromQueue el)\n    (on-mounted\n     (get-iframe el)\n     #(when-let [data (.-renderQueue el)]\n        (set! (.-renderQueue el) nil)\n        (render-scene el data)))))\n\n(defn enqueue-render-data [el data]\n  (set! (.-renderQueue el) data)\n  (process-render-queue el))\n\n(d/defcomponent Canvas\n  :on-mount (fn [el data]\n              (set! (.-renderQueue el) data)\n              (on-mounted\n               (get-iframe el)\n               (fn []\n                 (init-canvas\n                  el data\n                  (fn []\n                    (set! (.-renderFromQueue el) true)\n                    (process-render-queue el))))))\n  :on-update (fn [el data]\n               (enqueue-render-data el data))\n  [data]\n  [:div {:style {:background (or (:background/background-color (:opt data))\n                                 \"var(--canvas-bg)\")\n                 :display \"flex\"\n                 :transition \"width 0.25s, height 0.25s\"}}\n   [:iframe.canvas\n    {:src (or (:canvas-path data) \"/portfolio/canvas.html\")\n     :title \"Component scene\"\n     :style {:border \"none\"\n             :flex-grow \"1\"\n             :width (or (when (number? (:viewport/width (:opt data)))\n                          (:viewport/width (:opt data)))\n                        \"100%\")\n             :height (when (number? (:viewport/height (:opt data)))\n                       (:viewport/height (:opt data)))}}]])\n\n(d/defcomponent Toolbar [{:keys [buttons]}]\n  [:nav {:style {:background \"var(--bg)\"\n                 :color \"var(--fg)\"\n                 :border-bottom \"1px solid var(--separator)\"\n                 :display \"flex\"\n                 :gap 10\n                 :justify-content \"space-between\"\n                 :min-height 48\n                 :padding-left 20\n                 :padding-right 20}}\n   [:div {:style {:display \"flex\"\n                  :align-items \"center\"\n                  :gap 10}}\n    (for [tool (remove (comp #{:right} :align) buttons)]\n      (canvas/render-toolbar-button tool))]\n   [:div {:style {:display \"flex\"\n                  :align-items \"center\"\n                  :gap 10}}\n    (for [tool (filter (comp #{:right} :align) buttons)]\n      (canvas/render-toolbar-button tool))]])\n\n(d/defcomponent CanvasPanel [data]\n  [:div {:style {:border-top \"1px solid #ccc\"\n                 :background \"#ffffff\"\n                 :height (if (:minimized? data) \"40px\" \"30%\")\n                 :transition \"height 0.25s\"\n                 :position \"relative\"}}\n   (when-let [button (:button data)]\n     [:div {:style {:position \"absolute\"\n                    :right 20\n                    :top 10}}\n      (TriangleButton button)])\n   (TabBar data)\n   (some-> data :content view/render-view)])\n\n(d/defcomponent CanvasHeader\n  :keyfn :title\n  [{:keys [title url description code]}]\n  [:div {:style {:margin \"20px\"}}\n   [:h2.h3 {:style (when-not (empty? description)\n                     {:margin \"0 0 10px\"})}\n    (if url\n      [:a {:href url} title]\n      title)]\n   (when-not (empty? description)\n     (Markdown {:markdown description\n                :tag :p}))\n   (when-not (empty? code)\n     [:div {:style {:margin \"20px 0\"}}\n      [:h3.h4 {:style {:margin \"10px 0\"}}\n       \"Scene code\"]\n      (Code {:code code})])])\n\n(defn render-canvas [data]\n  [:div.canvas-wrapper\n   (->> [(when (not-empty (select-keys data [:title :description :code]))\n           (CanvasHeader data))\n         (when (:scene data)\n           (if (or (not (:component-fn (:scene data)))\n                   (:error (:scene data)))\n             (Error (:error (:scene data)))\n             (Canvas data)))]\n        (remove nil?))])\n\n(def direction\n  {:rows \"column\"\n   :cols \"row\"})\n\n(d/defcomponent WrappedMenuBar [menu-bar]\n  [:div\n   {:style {:background \"var(--bg)\"\n            :color \"var(--fg)\"\n            :padding \"10px 20px\"}}\n   (MenuBar (assoc menu-bar :size :small))])\n\n(defn get-grid-styles [data]\n  (into {:position \"absolute\"\n         :overflow \"hidden\"}\n        (if (:height data)\n          {:left 0\n           :right 0\n           :top (:offset data)\n           :height (:height data)}\n          {:top 0\n           :bottom 0\n           :left (:offset data)\n           :width (:width data)})))\n\n(defn- touch-x [e]\n  (or (some-> e .-changedTouches (aget 0) .-screenX)\n      (.-screenX e)))\n\n(defn- touch-y [e]\n  (or (some-> e .-changedTouches (aget 0) .-screenY)\n      (.-screenY e)))\n\n(defn get-style-n [style prop]\n  (js/parseInt (.getPropertyValue style prop) 10))\n\n(defn get-dim [props el]\n  (let [style (js/window.getComputedStyle el)]\n    (if (= :horizontal (:kind props))\n      {:size (get-style-n style \"height\")\n       :offset (get-style-n style \"top\")}\n      {:size (get-style-n style \"width\")\n       :offset (get-style-n style \"left\")})))\n\n(defn set-size [props el size]\n  (if (= :horizontal (:kind props))\n    (set! (.. el -style -height) (str size \"px\"))\n    (set! (.. el -style -width) (str size \"px\"))))\n\n(defn set-offset [props el offset]\n  (if (= :horizontal (:kind props))\n    (set! (.. el -style -top) (str offset \"px\"))\n    (set! (.. el -style -left) (str offset \"px\"))))\n\n(defn get-neighbour [el]\n  (.-nextSibling el))\n\n(d/defcomponent Handle\n  :on-mount (fn [el props]\n              (let [state (atom {})\n                    f (if (= :horizontal (:kind props)) touch-y touch-x)\n                    container (.-parentNode el)]\n\n                (.addEventListener\n                 el \"mousedown\"\n                 (fn [e]\n                   (swap! state assoc\n                          :dragging? true\n                          :start (f e)\n                          :dim (get-dim props container)\n                          :neighbour-dim (get-dim props (get-neighbour container)))\n                   (.preventDefault e)\n                   (.add (.-classList el) \"dragging\")))\n\n                (.addEventListener\n                 js/document.body\n                 \"mousemove\"\n                 (fn [e]\n                   (let [{:keys [dragging? start dim neighbour-dim]} @state]\n                     (when dragging?\n                       (let [offset (- (f e) start)\n                             neighbour (get-neighbour container)]\n                         (set-size props container (+ (:size dim) offset))\n                         (set-offset props neighbour (+ (:offset neighbour-dim) offset))\n                         (set-size props neighbour (- (:size neighbour-dim) offset)))))))\n\n                (.addEventListener\n                 js/document.body\n                 \"mouseup\"\n                 (fn [_e]\n                   (when (:dragging? @state)\n                     (swap! state dissoc :dragging?)\n                     (.remove (.-classList el) \"dragging\"))))))\n  [{:keys [kind]}]\n  [:div.draggable {:style (if (= :horizontal kind)\n                            {:border-bottom \"3px solid var(--hard-separator)\"\n                             :padding-top 30\n                             :position \"absolute\"\n                             :bottom 0\n                             :left 0\n                             :right 0}\n                            {:position \"absolute\"\n                             :border-right \"3px solid var(--hard-separator)\"\n                             :padding-left 20\n                             :right 0\n                             :top 0\n                             :bottom 0})}])\n\n(defn render-hud [hud]\n  (hud/render-hud\n   {:action (:action hud)\n    :style {:position \"absolute\"\n            :bottom 20\n            :left 20\n            :right 20}}\n   (when-let [error (:error hud)]\n     (Error error))))\n\n(d/defcomponent Pane\n  :keyfn :id\n  [{:keys [toolbar canvases title description background menu-bar browser handle class-name] :as data}]\n  [:div.pane\n   {:style (into (get-grid-styles data)\n                 {:min-height \"100%\"\n                  :display \"flex\"\n                  :flex-direction \"column\"})}\n   (some-> toolbar Toolbar)\n   (some-> menu-bar WrappedMenuBar)\n   [:div {:style (merge {:overflow \"auto\"\n                         :flex-grow 1\n                         :transition \"background 0.15s\"\n                         :background background})\n          :class (if (:items browser)\n                   :dark\n                   class-name)}\n    (when (:items browser)\n      (Browser browser))\n    (when (or title description)\n      [:div {:style {:margin \"20px\"}}\n       (when title\n         [:h1.h1 title])\n       (when description\n         (Markdown {:markdown description}))])\n    (when (seq canvases)\n      (map render-canvas canvases))]\n   (some-> handle Handle)])\n\n(defn render-layout [data]\n  (if (#{:rows :cols} (:kind data))\n    [:div {:style (get-grid-styles data)\n           :class (:kind data)}\n     (map render-layout (:xs data))\n     (some-> (:handle data) Handle)]\n    (Pane data)))\n\n(d/defcomponent CanvasView\n  :keyfn :id\n  [data]\n  [:div {:style {:flex-grow 1\n                 :display \"flex\"\n                 :flex-direction \"column\"}}\n   [:div {:style {:flex-grow 1\n                  :position \"relative\"}}\n    (render-layout data)]\n   (some-> data :hud render-hud)\n   (some-> data :panel CanvasPanel)])\n"],"x_google_ignoreList":[0]}