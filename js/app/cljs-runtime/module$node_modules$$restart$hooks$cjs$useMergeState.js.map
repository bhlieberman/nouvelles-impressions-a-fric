{
"version":3,
"file":"module$node_modules$$restart$hooks$cjs$useMergeState.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAqBAC,QAAsB,CAACC,YAAD,CAAe,CACnC,MAAM,CAACC,cAAD,CAAQC,QAAR,CAAA,CAAoB,GAAIC,MAAOC,CAAAA,QAAX,EAAqBJ,YAArB,CACpBK,aAAAA,CAAU,GAAIF,MAAOG,CAAAA,WAAX,EAAwBC,MAAA,EAAU,CACjC,IAAf,GAAIA,MAAJ,GACsB,UAAtB,GAAI,MAAOA,OAAX,CACEL,QAAA,CAASD,KAAA,EAAS,CAChB,MAAMO,UAAYD,MAAA,CAAON,KAAP,CAClB,OAAoB,KAAb,EAAAO,SAAA,CAAoBP,KAApB,CAA4BQ,MAAOC,CAAAA,MAAP,CAAc,EAAd,CAAkBT,KAAlB,CAAyBO,SAAzB,CAFnB,CAAlB,CADF,CAMEN,QAAA,CAASD,KAAA,EAASQ,MAAOC,CAAAA,MAAP,CAAc,EAAd,CAAkBT,KAAlB,CAAyBM,MAAzB,CAAlB,CAPF,CADgD,CAAlC,CAUb,CAACL,QAAD,CAVa,CAWhB,OAAO,CAACD,cAAD;AAAQI,YAAR,CAb4B,CApBrC,KAAIF,OAAST,OAAA,CAAQ,iCAAR,CALoG;",
"sources":["node_modules/@restart/hooks/cjs/useMergeState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$restart$hooks$cjs$useMergeState\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = useMergeState;\nvar _react = require(\"react\");\n/**\n * Updates state, partial updates are merged into existing state values\n */\n\n/**\n * Mimics a React class component's state model, of having a single unified\n * `state` object and an updater that merges updates into the existing state, as\n * opposed to replacing it.\n *\n * ```js\n * const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n *\n * setState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n *\n * setState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n * ```\n *\n * @param initialState The initial state object\n */\nfunction useMergeState(initialState) {\n  const [state, setState] = (0, _react.useState)(initialState);\n  const updater = (0, _react.useCallback)(update => {\n    if (update === null) return;\n    if (typeof update === 'function') {\n      setState(state => {\n        const nextState = update(state);\n        return nextState == null ? state : Object.assign({}, state, nextState);\n      });\n    } else {\n      setState(state => Object.assign({}, state, update));\n    }\n  }, [setState]);\n  return [state, updater];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","default","useMergeState","initialState","state","setState","_react","useState","updater","useCallback","update","nextState","Object","assign"]
}
