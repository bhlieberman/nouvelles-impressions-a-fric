{"version":3,"sources":["nia/events/storage.cljs"],"mappings":";;;;;;;AAOA,yDAAA,zDAACA,+HAEA,aAAAC,FAAKG;AAAL,AAAA,IAAAF,aAAAD;YAAA,AAAAE,4CAAAD,WAAA,IAAA,nEAAQE;oBAAR,AAAAD,4CAAAD,WAAA,IAAA,3EAAUG;AAAV,AAAA,kDAAA,iEAAA,2CAAA,uDAAA,mDAAA,+LAAA,2DAAA,OAAA,2EAAA,2CAAA,qEAAA,aAAA,oEAAA,aAAA,0EAAA,qDAAA,6DAAA,iEAAA,mFAAA,wFAAA,gEAAA,mFAAA,liCAEqB,4BAAA,MAAA,+DAAA,hGAAKC,iFAAkBD,mBAAkBE,ubAItBC;;AAKzC,yDAAA,zDAACR,yIAEA,WAAAS,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaI;IAAbD,aAAAJ;QAAA,AAAAP,4CAAAW,WAAA,IAAA,/DAAmBV;eAAnB,AAAAD,4CAAAW,WAAA,IAAA,tEAAqBE;AAArB,AAAA,kDAAA,+MAAA,/JACO,kDAAA,lDAACC,+CAAOF,kEAAgBG,eAAK,AAACC,oBAAuBH,+DACpDA;;AAET,yDAAA,zDAAChB,8IAEA,WAAAoB,SAAkBhB;AAAlB,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAAT,4BAAAS;SAAA,AAAAR,4CAAAQ,eAAA,hEAAaN;AAAb,AAAA,kDAAA,kEACgB,+CAAA,/CAACF,4CAAIE;;AAEtB,qBAAA,rBAACO,uFAEA,WAAKC;AAAL,AACE,IAAAC,aAAA,AAAAC,cAAYF;IAAZG,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,UAAA,AAAAD,kDAAAE,xDAAQS;AAAR,AAAA,AACE,AAACC,oBAAuBD;;AAD1B;AAAA,eAAAb;eAAAE;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAC,qBAAA,AAAAJ,cAAAD;AAAA,AAAA,GAAAK;AAAA,AAAA,IAAAL,iBAAAK;AAAA,AAAA,GAAA,AAAAC,6BAAAN;AAAA,IAAAO,kBAAA,AAAAC,sBAAAR;AAAA,AAAA,eAAA,AAAAS,qBAAAT;eAAAO;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,UAAA,AAAAI,gBAAAX,tBAAQa;AAAR,AAAA,AACE,AAACC,oBAAuBD;;AAD1B;AAAA,eAAA,AAAAD,eAAAZ;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;AAGH,qBAAA,rBAACF,yEAEA,WAAKiB;AAAL,AACE,OAACC,YAAeD;;AAEnB,yDAAA,zDAACvC,wIAEA,aAAAyC,FAAKrC;AAAL,AAAA,IAAAsC,aAAAD;YAAA,AAAAtC,4CAAAuC,WAAA,IAAA,nEAAQtC;YAAR,AAAAD,4CAAAuC,WAAA,IAAA,nEAAUC;AAAV,AAAA,kDAAA,uDACUA;;AAEX,qBAAA,rBAACrB,4EAEA,WAAKsB;AAAL,AACE,OAACC,cAAiBD","names":["re_frame.core.reg_event_fx","p__56566","vec__56567","cljs.core.nth","_","resource-name","nia.config.storage/sas-url","nia.config.storage/sas-token","ajax.protocols/-body","p__56570","p__56571","map__56572","cljs.core/--destructure-map","cljs.core.get","vec__56573","db","response","cljs.core.update","cljs.core/conj","js/URL.createObjectURL","p__56576","map__56577","re-frame.core/reg-fx","urls","seq__56578","cljs.core/seq","chunk__56579","count__56580","i__56581","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","url","js/URL.revokeObjectURL","resp","js/console.log","p__56582","vec__56583","error","err","js/console.error"],"sourcesContent":["(ns nia.events.storage\n  #_{:clj-kondo/ignore [:unused-namespace]}\n  (:require [ajax.core :as ajax]\n            [ajax.protocols :as p]\n            [nia.config.storage :refer [sas-url sas-token]] \n            [re-frame.core :refer [reg-event-fx reg-fx]]))\n\n(reg-event-fx\n :azure/get-blob\n (fn [_ [_ resource-name]]\n   {:http-xhrio {:method :get\n                 :uri (str sas-url \"nia\" \"/\" resource-name \"?\" sas-token)\n                 :timeout 8000\n                 :response-format {:content-type \"image/jpeg\"\n                                   :description \"JPEG image\"\n                                   :read p/-body\n                                   :type :blob}\n                 :on-success [:blob/create-obj-url]\n                 :on-failure [:report-azure-error]}}))\n\n(reg-event-fx\n :blob/create-obj-url\n (fn [{:keys [db]} [_ response]]\n   {:db (update db :images/urls conj (js/URL.createObjectURL response))\n    :log response}))\n\n(reg-event-fx\n :images/revoke-obj-urls \n (fn [{:keys [db]} _]\n   {:revoke-urls (get db :images/urls)}))\n\n(reg-fx\n :revoke-urls\n (fn [urls]\n   (doseq [url urls] \n     (js/URL.revokeObjectURL url))))\n\n(reg-fx\n :log\n (fn [resp]\n   (js/console.log resp)))\n\n(reg-event-fx\n :report-azure-error\n (fn [_ [_ error]]\n   {:azure error}))\n\n(reg-fx\n :azure\n (fn [err]\n   (js/console.error err)))"]}